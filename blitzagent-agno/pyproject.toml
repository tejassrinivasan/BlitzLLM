[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "blitzagent-agno"
version = "0.1.0"
description = "BlitzAgent built with Agno framework - Single agent with Gemini 2.5 Pro reasoning, PostgreSQL memory, Python MCP integration, structured output, and metrics"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "BlitzAgent Team", email = "team@blitzagent.com"}
]
requires-python = ">=3.10"
dependencies = [
    "agno>=1.6.0",
    "google-generativeai>=0.8.0",
    "google-genai>=1.21.0",
    "openai>=1.0.0",
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.9",
    "asyncpg>=0.29.0",
    "pgvector>=0.2.0",
    "numpy>=1.24.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.0.0",
    "prometheus-client>=0.19.0",
    "aiofiles>=23.2.1",
    "rich>=13.7.0",
    "typer[all]>=0.9.0",
    "python-multipart>=0.0.6",
    "httpx>=0.25.0",
    "asyncio-mqtt>=0.13.0",
    "structlog>=23.2.0",
    "tenacity>=8.2.3",
    "jinja2>=3.1.2",
    "markupsafe>=2.1.3",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

[project.scripts]
blitzagent-agno = "blitzagent_agno.cli:main"
blitzagent-server = "blitzagent_agno.server:run_server"
blitzagent-playground = "blitzagent_agno.playground:main"

[project.urls]
Homepage = "https://github.com/blitzagent/blitzagent-agno"
Repository = "https://github.com/blitzagent/blitzagent-agno"
Documentation = "https://docs.blitzagent.com/agno"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
asyncio_mode = "auto" 